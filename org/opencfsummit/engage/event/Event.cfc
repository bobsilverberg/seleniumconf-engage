<cfcomponent
	displayname="Event"
	output="false"
	hint="A bean which models the Event form.">

<!--- This bean was generated by the Rooibos Generator with the following template:
Bean Name: Event
Path to Bean: Event
Extends: 
Call super.init(): false
Create cfproperties: false
Bean Template:
	eventID numeric 0
	parentID numeric 0
	slug string 
	title string 
	startDate date #CreateDateTime(1900,1,1,0,0,0)#
	endDate date #CreateDateTime(1900,1,1,0,0,0)#
	proposalDeadline date #CreateDateTime(1900,1,1,0,0,0)#
	allowProposalTitleEdits boolean false
	publishProposalStatuses boolean false
	publishSchedule boolean false
	acceptProposalCommentsAfterDeadline boolean false
	openText string 
	closedText string 
	sessionText string 
	tracksText string 
	dtCreated date #CreateDateTime(1900,1,1,0,0,0)#
	dtUpdated date #CreateDateTime(1900,1,1,0,0,0)#
	createdBy numeric 0
	updatedBy numeric 0
	isActive boolean false
Create getMemento method: false
Create setMemento method: false
Create setStepInstance method: false
Create validate method: false
Create validate interior: false
Date Format: 
--->

	<!---
	PROPERTIES
	--->
	<cfset variables.instance = StructNew() />

	<!---
	INITIALIZATION / CONFIGURATION
	--->
	<cffunction name="init" access="public" returntype="Event" output="false">
		<cfargument name="eventID" type="numeric" required="false" default="0" />
		<cfargument name="parentID" type="numeric" required="false" default="0" />
		<cfargument name="slug" type="string" required="false" default="" />
		<cfargument name="title" type="string" required="false" default="" />
		<cfargument name="startDate" type="date" required="false" default="#CreateDateTime(1900,1,1,0,0,0)#" />
		<cfargument name="endDate" type="date" required="false" default="#CreateDateTime(1900,1,1,0,0,0)#" />
		<cfargument name="proposalDeadline" type="date" required="false" default="#CreateDateTime(1900,1,1,0,0,0)#" />
		<cfargument name="allowProposalTitleEdits" type="boolean" required="false" default="false" />
		<cfargument name="publishProposalStatuses" type="boolean" required="false" default="false" />
		<cfargument name="publishSchedule" type="boolean" required="false" default="false" />
		<cfargument name="acceptProposalCommentsAfterDeadline" type="boolean" required="false" default="false" />
		<cfargument name="openText" type="string" required="false" default="" />
		<cfargument name="closedText" type="string" required="false" default="" />
		<cfargument name="sessionText" type="string" required="false" default="" />
		<cfargument name="tracksText" type="string" required="false" default="" />
		<cfargument name="dtCreated" type="string" required="false" default="#CreateDateTime(1900,1,1,0,0,0)#" />
		<cfargument name="dtUpdated" type="string" required="false" default="#CreateDateTime(1900,1,1,0,0,0)#" />
		<cfargument name="createdBy" type="numeric" required="false" default="0" />
		<cfargument name="updatedBy" type="numeric" required="false" default="0" />
		<cfargument name="isActive" type="boolean" required="false" default="false" />

		<!--- run setters --->
		<cfset setEventID(arguments.eventID) />
		<cfset setParentID(arguments.parentID) />
		<cfset setSlug(arguments.slug) />
		<cfset setTitle(arguments.title) />
		<cfset setStartDate(arguments.startDate) />
		<cfset setEndDate(arguments.endDate) />
		<cfset setProposalDeadline(arguments.proposalDeadline) />
		<cfset setAllowProposalTitleEdits(arguments.allowProposalTitleEdits) />
		<cfset setPublishProposalStatuses(arguments.publishProposalStatuses) />
		<cfset setPublishSchedule(arguments.publishSchedule) />
		<cfset setAcceptProposalCommentsAfterDeadline(arguments.acceptProposalCommentsAfterDeadline) />
		<cfset setOpenText(arguments.openText) />
		<cfset setClosedText(arguments.closedText) />
		<cfset setSessionText(arguments.sessionText) />
		<cfset setTracksText(arguments.tracksText) />
		<cfset setDtCreated(arguments.dtCreated) />
		<cfset setDtUpdated(arguments.dtUpdated) />
		<cfset setCreatedBy(arguments.createdBy) />
		<cfset setUpdatedBy(arguments.updatedBy) />
		<cfset setIsActive(arguments.isActive) />

		<cfreturn this />
 	</cffunction>

	<!---
	ACCESSORS
	--->
	<cffunction name="setEventID" access="public" returntype="void" output="false">
		<cfargument name="eventID" type="numeric" required="true" />
		<cfset variables.instance.eventID = arguments.eventID />
	</cffunction>
	<cffunction name="getEventID" access="public" returntype="numeric" output="false">
		<cfreturn variables.instance.eventID />
	</cffunction>

	<cffunction name="setParentID" access="public" returntype="void" output="false">
		<cfargument name="parentID" type="numeric" required="true" />
		<cfset variables.instance.parentID = arguments.parentID />
	</cffunction>
	<cffunction name="getParentID" access="public" returntype="numeric" output="false">
		<cfreturn variables.instance.parentID />
	</cffunction>

	<cffunction name="setSlug" access="public" returntype="void" output="false">
		<cfargument name="slug" type="string" required="true" />
		<cfset variables.instance.slug = trim(arguments.slug) />
	</cffunction>
	<cffunction name="getSlug" access="public" returntype="string" output="false">
		<cfreturn variables.instance.slug />
	</cffunction>

	<cffunction name="setTitle" access="public" returntype="void" output="false">
		<cfargument name="title" type="string" required="true" />
		<cfset variables.instance.title = trim(arguments.title) />
	</cffunction>
	<cffunction name="getTitle" access="public" returntype="string" output="false">
		<cfreturn variables.instance.title />
	</cffunction>

	<cffunction name="setStartDate" access="public" returntype="void" output="false">
		<cfargument name="startDate" type="date" required="true" />
		<cfset variables.instance.startDate = arguments.startDate />
	</cffunction>
	<cffunction name="getStartDate" access="public" returntype="date" output="false">
		<cfreturn variables.instance.startDate />
	</cffunction>

	<cffunction name="setEndDate" access="public" returntype="void" output="false">
		<cfargument name="endDate" type="date" required="true" />
		<cfset variables.instance.endDate = arguments.endDate />
	</cffunction>
	<cffunction name="getEndDate" access="public" returntype="date" output="false">
		<cfreturn variables.instance.endDate />
	</cffunction>

	<cffunction name="setProposalDeadline" access="public" returntype="void" output="false">
		<cfargument name="proposalDeadline" type="date" required="true" />
		<cfset variables.instance.proposalDeadline = arguments.proposalDeadline />
	</cffunction>
	<cffunction name="getProposalDeadline" access="public" returntype="date" output="false">
		<cfreturn variables.instance.proposalDeadline />
	</cffunction>

	<cffunction name="setAllowProposalTitleEdits" access="public" returntype="void" output="false">
		<cfargument name="allowProposalTitleEdits" type="boolean" required="true" />
		<cfset variables.instance.allowProposalTitleEdits = arguments.allowProposalTitleEdits />
	</cffunction>
	<cffunction name="getAllowProposalTitleEdits" access="public" returntype="boolean" output="false">
		<cfreturn variables.instance.allowProposalTitleEdits />
	</cffunction>

	<cffunction name="setPublishProposalStatuses" access="public" returntype="void" output="false">
		<cfargument name="publishProposalStatuses" type="boolean" required="true" />
		<cfset variables.instance.publishProposalStatuses = arguments.publishProposalStatuses />
	</cffunction>
	<cffunction name="getPublishProposalStatuses" access="public" returntype="boolean" output="false">
		<cfreturn variables.instance.publishProposalStatuses />
	</cffunction>

	<cffunction name="setPublishSchedule" access="public" returntype="void" output="false">
		<cfargument name="publishSchedule" type="boolean" required="true" />
		<cfset variables.instance.publishSchedule = arguments.publishSchedule />
	</cffunction>
	<cffunction name="getPublishSchedule" access="public" returntype="boolean" output="false">
		<cfreturn variables.instance.publishSchedule />
	</cffunction>

	<cffunction name="setAcceptProposalCommentsAfterDeadline" access="public" returntype="void" output="false">
		<cfargument name="acceptProposalCommentsAfterDeadline" type="boolean" required="true" />
		<cfset variables.instance.acceptProposalCommentsAfterDeadline = arguments.acceptProposalCommentsAfterDeadline />
	</cffunction>
	<cffunction name="getAcceptProposalCommentsAfterDeadline" access="public" returntype="boolean" output="false">
		<cfreturn variables.instance.acceptProposalCommentsAfterDeadline />
	</cffunction>

	<cffunction name="setOpenText" access="public" returntype="void" output="false">
		<cfargument name="openText" type="string" required="true" />
		<cfset variables.instance.openText = trim(arguments.openText) />
	</cffunction>
	<cffunction name="getOpenText" access="public" returntype="string" output="false">
		<cfreturn variables.instance.openText />
	</cffunction>

	<cffunction name="setClosedText" access="public" returntype="void" output="false">
		<cfargument name="closedText" type="string" required="true" />
		<cfset variables.instance.closedText = trim(arguments.closedText) />
	</cffunction>
	<cffunction name="getClosedText" access="public" returntype="string" output="false">
		<cfreturn variables.instance.closedText />
	</cffunction>

	<cffunction name="setSessionText" access="public" returntype="void" output="false">
		<cfargument name="sessionText" type="string" required="true" />
		<cfset variables.instance.sessionText = trim(arguments.sessionText) />
	</cffunction>
	<cffunction name="getSessionText" access="public" returntype="string" output="false">
		<cfreturn variables.instance.sessionText />
	</cffunction>

	<cffunction name="setTracksText" access="public" returntype="void" output="false">
		<cfargument name="tracksText" type="string" required="true" />
		<cfset variables.instance.tracksText = trim(arguments.tracksText) />
	</cffunction>
	<cffunction name="getTracksText" access="public" returntype="string" output="false">
		<cfreturn variables.instance.tracksText />
	</cffunction>

	<cffunction name="setDtCreated" access="public" returntype="void" output="false">
		<cfargument name="dtCreated" type="date" required="true" />
		<cfset variables.instance.dtCreated = arguments.dtCreated />
	</cffunction>
	<cffunction name="getDtCreated" access="public" returntype="date" output="false">
		<cfreturn variables.instance.dtCreated />
	</cffunction>

	<cffunction name="setDtUpdated" access="public" returntype="void" output="false">
		<cfargument name="dtUpdated" type="date" required="true" />
		<cfset variables.instance.dtUpdated = arguments.dtUpdated />
	</cffunction>
	<cffunction name="getDtUpdated" access="public" returntype="date" output="false">
		<cfreturn variables.instance.dtUpdated />
	</cffunction>

	<cffunction name="setCreatedBy" access="public" returntype="void" output="false">
		<cfargument name="createdBy" type="numeric" required="true" />
		<cfset variables.instance.createdBy = trim(arguments.createdBy) />
	</cffunction>
	<cffunction name="getCreatedBy" access="public" returntype="numeric" output="false">
		<cfreturn variables.instance.createdBy />
	</cffunction>

	<cffunction name="setUpdatedBy" access="public" returntype="void" output="false">
		<cfargument name="updatedBy" type="numeric" required="true" />
		<cfset variables.instance.updatedBy = arguments.updatedBy />
	</cffunction>
	<cffunction name="getUpdatedBy" access="public" returntype="numeric" output="false">
		<cfreturn variables.instance.updatedBy />
	</cffunction>

	<cffunction name="setIsActive" access="public" returntype="void" output="false">
		<cfargument name="isActive" type="boolean" required="true" />
		<cfset variables.instance.isActive = arguments.isActive />
	</cffunction>
	<cffunction name="getIsActive" access="public" returntype="boolean" output="false">
		<cfreturn variables.instance.isActive />
	</cffunction>
	
	<cffunction name="validate" access="public" output="false" returntype="struct">
		<cfset var errors = StructNew() />
		
		<cfif trim(getSlug()) eq "">
			<cfset errors.slug = "Slug is required" />
		</cfif>
		
		<cfif Len(Trim(getSlug())) gt 255>
			<cfset errors.slug = "Slug is limited to 255 characters" />
		</cfif>
		
		<cfif trim(getTitle()) eq "">
			<cfset errors.title = "Title is required" />
		</cfif>
		
		<cfif Len(Trim(getTitle())) gt 255>
			<cfset errors.title = "Title is limited to 255 characters" />
		</cfif>
		
		<cfif not IsValid("date", getStartDate())>
			<cfset errors.startDate = "Start date is not a valid date" />
		</cfif>
		
		<cfif not IsValid("date", getEndDate())>
			<cfset errors.endDate = "End date is not a valid date" />
		</cfif>
		
		<cfif not IsValid("date", getProposalDeadline())>
			<cfset errors.proposalDeadline = "Proposal deadline is not a valid date" />
		</cfif>
		
		<cfif trim(getOpenText()) eq "">
			<cfset errors.openText = "Open text is required" />
		</cfif>
		
		<cfif trim(getClosedText()) eq "">
			<cfset errors.closedText = "Closed text is required" />
		</cfif>
		
		<cfreturn errors />
	</cffunction>

	<cffunction name="dump" access="public" output="true" return="void">
		<cfargument name="abort" type="boolean" default="false" />
		<cfdump var="#variables.instance#" />
		<cfif arguments.abort>
			<cfabort />
		</cfif>
	</cffunction>
</cfcomponent>