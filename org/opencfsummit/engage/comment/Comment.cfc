<cfcomponent
	displayname="Comment"
	output="false"
	hint="A bean which models the Comment form.">

<!--- This bean was generated by the Rooibos Generator with the following template:
Bean Name: Comment
Path to Bean: Comment
Extends: 
Call super.init(): false
Create cfproperties: false
Bean Template:
	commentID numeric 0
	itemID numeric 0
	itemType string 
	comment string 
	dtCreated date #CreateDateTime(1900, 1, 1, 0, 0, 0)#
	dtUpdated date #CreateDateTime(1900, 1, 1, 0, 0, 0)#
	createdBy numeric 0
	updatedBy numeric 0
	isActive boolean false
Create getMemento method: false
Create setMemento method: false
Create setStepInstance method: false
Create validate method: true
Create validate interior: false
Date Format: 
--->

	<!---
	PROPERTIES
	--->
	<cfset variables.instance = StructNew() />

	<!---
	INITIALIZATION / CONFIGURATION
	--->
	<cffunction name="init" access="public" returntype="Comment" output="false">
		<cfargument name="commentID" type="numeric" required="false" default="0" />
		<cfargument name="itemID" type="numeric" required="false" default="0" />
		<cfargument name="itemType" type="string" required="false" default="" />
		<cfargument name="comment" type="string" required="false" default="" />
		<cfargument name="dtCreated" type="date" required="false" default="#CreateDateTime(1900, 1, 1, 0, 0, 0)#" />
		<cfargument name="dtUpdated" type="date" required="false" default="#CreateDateTime(1900, 1, 1, 0, 0, 0)#" />
		<cfargument name="createdBy" type="numeric" required="false" default="0" />
		<cfargument name="updatedBy" type="numeric" required="false" default="0" />
		<cfargument name="isActive" type="boolean" required="false" default="false" />

		<!--- run setters --->
		<cfset setCommentID(arguments.commentID) />
		<cfset setItemID(arguments.itemID) />
		<cfset setItemType(arguments.itemType) />
		<cfset setComment(arguments.comment) />
		<cfset setDtCreated(arguments.dtCreated) />
		<cfset setDtUpdated(arguments.dtUpdated) />
		<cfset setCreatedBy(arguments.createdBy) />
		<cfset setUpdatedBy(arguments.updatedBy) />
		<cfset setIsActive(arguments.isActive) />

		<cfreturn this />
 	</cffunction>

	<!---
	ACCESSORS
	--->
	<cffunction name="setCommentID" access="public" returntype="void" output="false">
		<cfargument name="commentID" type="numeric" required="true" />
		<cfset variables.instance.commentID = arguments.commentID />
	</cffunction>
	<cffunction name="getCommentID" access="public" returntype="numeric" output="false">
		<cfreturn variables.instance.commentID />
	</cffunction>

	<cffunction name="setItemID" access="public" returntype="void" output="false">
		<cfargument name="itemID" type="numeric" required="true" />
		<cfset variables.instance.itemID = arguments.itemID />
	</cffunction>
	<cffunction name="getItemID" access="public" returntype="numeric" output="false">
		<cfreturn variables.instance.itemID />
	</cffunction>

	<cffunction name="setItemType" access="public" returntype="void" output="false">
		<cfargument name="itemType" type="string" required="true" />
		<cfset variables.instance.itemType = trim(arguments.itemType) />
	</cffunction>
	<cffunction name="getItemType" access="public" returntype="string" output="false">
		<cfreturn variables.instance.itemType />
	</cffunction>

	<cffunction name="setComment" access="public" returntype="void" output="false">
		<cfargument name="comment" type="string" required="true" />
		<cfset variables.instance.comment = trim(arguments.comment) />
	</cffunction>
	<cffunction name="getComment" access="public" returntype="string" output="false">
		<cfreturn variables.instance.comment />
	</cffunction>

	<cffunction name="setDtCreated" access="public" returntype="void" output="false">
		<cfargument name="dtCreated" type="date" required="true" />
		<cfset variables.instance.dtCreated = arguments.dtCreated />
	</cffunction>
	<cffunction name="getDtCreated" access="public" returntype="date" output="false">
		<cfreturn variables.instance.dtCreated />
	</cffunction>

	<cffunction name="setDtUpdated" access="public" returntype="void" output="false">
		<cfargument name="dtUpdated" type="date" required="true" />
		<cfset variables.instance.dtUpdated = arguments.dtUpdated />
	</cffunction>
	<cffunction name="getDtUpdated" access="public" returntype="string" output="false">
		<cfreturn variables.instance.dtUpdated />
	</cffunction>

	<cffunction name="setCreatedBy" access="public" returntype="void" output="false">
		<cfargument name="createdBy" type="numeric" required="true" />
		<cfset variables.instance.createdBy = arguments.createdBy />
	</cffunction>
	<cffunction name="getCreatedBy" access="public" returntype="numeric" output="false">
		<cfreturn variables.instance.createdBy />
	</cffunction>

	<cffunction name="setUpdatedBy" access="public" returntype="void" output="false">
		<cfargument name="updatedBy" type="numeric" required="true" />
		<cfset variables.instance.updatedBy = arguments.updatedBy />
	</cffunction>
	<cffunction name="getUpdatedBy" access="public" returntype="numeric" output="false">
		<cfreturn variables.instance.updatedBy />
	</cffunction>

	<cffunction name="setIsActive" access="public" returntype="void" output="false">
		<cfargument name="isActive" type="boolean" required="true" />
		<cfset variables.instance.isActive = arguments.isActive />
	</cffunction>
	<cffunction name="getIsActive" access="public" returntype="boolean" output="false">
		<cfreturn variables.instance.isActive />
	</cffunction>

	<cffunction name="validate" access="public" returntype="struct" output="false">
		<cfscript>
			var errors = StructNew();
			
			if (getItemID() == 0) {
				errors.itemID = "Item ID is required";
			}
			
			if (getItemType() == "") {
				errors.itemType = "Item type is required";
			}
			
			if (getComment() == "") {
				errors.comment = "Comment is required";
			}
			
			return errors;
		</cfscript>
	</cffunction>

	<!---
	DUMP
	--->
	<cffunction name="dump" access="public" output="true" return="void">
	<cfargument name="abort" type="boolean" default="FALSE" />
		<cfdump var="#variables.instance#" />
		<cfif arguments.abort>
			<cfabort />
		</cfif>
	</cffunction>
</cfcomponent>